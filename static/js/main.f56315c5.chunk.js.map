{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onClick","event","onChangeFilter","target","ExpenseData","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","datePoints","dataPoint","totalMaximum","max","ExpensesChart","chdatDataPonits","expenses","getMonth","Expenses","useState","filteredYear","setfilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpensaData","type","onChange","min","step","size","onCancel","NewExpense","isEditting","setIsEditing","enterdExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f56315c5.chunk.js","sourcesContent":["import React from \"react\";\nimport './Card.css'\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className\n\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value)\n  };\n  \n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <div value={props.selected} onClick={dropdownChangeHandler}>\n          <button value=\"2022\">2022</button>\n          <button value=\"2021\">2021</button>\n          <button value=\"2020\">2020</button>\n          <button value=\"2019\">2019</button>\n        </div>\n      </div>\n        <div className=\"line\"></div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport './ExpenseDate.css'\n\nconst ExpenseData = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseData;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseData from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseData date={props.date} />\n        <div className=\"expense-bg\">\n          <h2>\n            {props.title}\n            <div className=\"expense-item__description\">\n              <div className=\"expense-item__price\">{props.amount} Ïõê</div>\n            </div>\n          </h2>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n  let expensesContent = <p>No expenses found.</p>;\n\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n    const dataPointValues = props.datePoints.map(dataPoint => dataPoint.value)\n    const totalMaximum = Math.max(...dataPointValues)\n\n  return (\n    <div className=\"chart\">\n      {props.datePoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chdatDataPonits = [\n    { label: \"jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth()\n    chdatDataPonits[expenseMonth].value += expense.amount\n  }\n\n  return <Chart datePoints={chdatDataPonits} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setfilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setfilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div className=\"expenses_bg\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <div className=\"expenses_bg_two\">\n        <Card className=\"expenses\">\n          <ExpensesList items={filteredExpenses} />\n        </Card>\n        <ExpensesChart expenses={filteredExpenses} />\n      </div>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  // submit ÏÉàÎ°úÍ≥†Ïπ® Î∞©ÏßÄ\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    // form ÏûëÏÑ±\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpensaData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>date</label>\n          <input\n            type=\"date\"\n            min=\"2020-01-01\"\n            max=\"2023-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n            size='1'\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}> Cancel </button>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const [isEditting, setIsEditing] = useState(false);\n\n  const SaveExpensaDataHandler = (enterdExpenseData) => {\n    const expenseData = {\n      ...enterdExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stoptEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditting && (\n        <button onClick={startEditingHandler}>Add New</button>\n      )}\n      {isEditting && (\n        <ExpenseForm\n          onSaveExpensaData={SaveExpensaDataHandler}\n          onCancel={stoptEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport \"./App.css\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 10000,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 8900000, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 100000,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 230000,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n    // ÏÉà Î∞∞Ïó¥Í≥º, ...Í∏∞Ï°¥ Î∞∞Ïó¥\n  };\n\n  return (\n    <div className=\"app_outer\">\n      <div className=\"app_inner\">\n        <NewExpense onAddExpense={addExpenseHandler} />\n        <Expenses items={expenses} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}